# Aliases to use with Global Alias
#------------------------------------------------------
# Automatically Expanding Global Aliases (Space key to expand)
# references: http://blog.patshead.com/2012/11/automatically-expaning-zsh-global-aliases---simplified.html
# video: https://www.youtube.com/watch?v=WTTIGjZAMGg
# import this file into the .zshrc fie with '. ~/.zsh_aliases'

#                             CUSTOM FUNCTIONS                                #
#-----------------------------------------------------------------------------#

export PROJECTS_ROOT="$HOME/Documents/GitHub"

can-use-for-aliasing() {
  # Helper function to check if a command exists to use for aliasing
  # Example usage: `can-use-for-aliasing some_command && echo yay || echo no`
  for cmd in "$@"; do
    command -v "$cmd" >/dev/null || printf "Cannot create alias using ${RED}$cmd${NC} since it is not installed.\n"
  done
}
change-project() {
  # Used via: alias p="change-project"
  # cd $(fd -L $PROJECTS_ROOT --maxdepth 1 --type d | selecta) && clear
  # old way using find, not fd
  cd $(find -L $PROJECTS_ROOT -maxdepth 1 -type d | selecta) && clear
}

# show-file() {
#   cat $(ls | selecta)
# }

show-clipboard() {
  can-use-for-aliasing pbpaste && printf "$(pbpaste)\n"
}

auto-retry() {
  false
  while [ $? -ne 0 ]; do
    "$@" || (
      sleep 1
      false
    )
  done
}

#  ALIASES                                                                    #
#-----------------------------------------------------------------------------#
# if you alias an existing command, for example 'ls' then you can run '\ls'
# to run the unaliased version

# From Dan Ryan's blog - http://danryan.co/using-antigen-for-zsh.html
man() {
  # Shows pretty `man` page.
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}
# fuzzy-find any file with syntax preview
fbat() {
  local file
  file=$(fzf --preview 'bat --style=numbers --color=always --line-range :500 {}') && code "$file"
}
# Sorts directories in top, colors, and prints `/` at directories:
# alias ls="gls --color -h --group-directories-first -F"
ls '/usr/local/bin/brew' >/dev/null && alias ibrew='/usr/local/bin/brew' # Rosetta 2 brew
alias grep='grep --color=auto'                                           # colors grep results
alias todo="nano ~/todo.txt"
alias hint="printf '${BLUE}Cool commands and aliases:\n\n${GREEN}hn\ncdd\nstats\nfortune\ntrash\n'"
alias reload="printf 'Running ${BLUE}_omz::reload${NC}! ${GRAY}consider compiling zsh stuff using ${GREEN}zcompile ~/.zshrc ~/.config/zsh/.zsh*${GRAY} \n'; _omz::reload"
alias zcomp="printf 'Running ${BLUE}zcompile${NC} on your zsh config files...\n' && [ -f ~/.zshrc.zwc ] && rm ~/.zshrc.zwc; [ -f ~/.config/zsh/.zsh*.zwc ] && rm ~/.config/zsh/.zsh*.zwc >/dev/null; zcompile ~/.zshrc ~/.config/zsh/.zsh* && printf 'Done!\n'"

alias rel="reload"
alias df="df; printf '\nFor more human-readable output, try running ${GREEN}dfh${NC}!\n'"
alias dfh='/bin/df -h'
alias history='history -E 1' # show timestamps and ignore duplicates in history
alias h='history | fzf'      # Fuzzy search through command history
alias p='change-project'     # change-project is defined in custom functions
alias d='cd ~/Downloads/'
alias mv='mv -iv'
alias cp='cp -iv'
alias myip="curl ifconfig.me"
alias localip="ipconfig getifaddr en0"
create-dir() {
  \mkdir $@ && printf "Created new directory ${GREEN}$@/${NC} ${GRAY}in $(pwd)${NC}\n"
}
alias mkdir='create-dir'
alias hn='clx --nerdfonts --categories="top,best,ask,show,new"'
# "Run" the file to look at its content (https://www.stefanjudis.com/today-i-learned/suffix-aliases-in-zsh/)
# $ ./readme.md
# -> cat ./readme.md
alias -s {js,json,env,md,html,css,toml}=cat

alias tailscale="/Applications/Tailscale.app/Contents/MacOS/Tailscale"

alias ports='lsof -i -P -n | grep LISTEN' # View port usage

can-use-for-aliasing bat && alias cat='bat --theme=GitHub -P --style "plain,changes" --color=always'
can-use-for-aliasing brew && alias update="printf 'Running ${BLUE}brew update${NC}...\n'; brew update && printf 'Running ${BLUE}brew upgrade${NC}...\n'; brew upgrade"
can-use-for-aliasing broot && alias cdd='broot -s'
can-use-for-aliasing htop && alias top='htop'
can-use-for-aliasing btm && alias top='btm'
can-use-for-aliasing dust && alias du='dust'
# can-use-for-aliasing fd && alias find='fd'
can-use-for-aliasing eza && alias la='eza --sort=type --long --all --icons --color=always' || alias la='ls -lah'
can-use-for-aliasing lazydocker && alias lzd='lazydocker'

alias clipboard='show-clipboard'
# alias clippy='pbcopy'
# alias copied='pbpaste'
# alias copied='echo "$(pbpaste)"; $pbpaste' # usage example: `copied | echo`
alias copied="show-clipboard" # usage example: `copied | echo`

# Lists the ten most used commands.
alias print-stats='sort | uniq -c | sort -r' # only for use with piped in data
alias stats='printf "${BLUE}Your most used commands:${NC}\n"; \history 0 | awk "{print \$2}" | print-stats | head'
#   Remove all items safely, to Trash (`brew install trash`).
remove-file() {
  \trash $@ && printf "${RED}$@${NC} was moved into the Trash\n${GRAY}(Hint: Run ${BLUE}trash${GRAY} to list all items currently in the Trash)${NC}\n"
}
[[ -z "fork" ]] || alias fork='/Applications/Fork.app/Contents/Resources/fork_cli'
[[ -z "$commands[trash]" ]] || alias rm='remove-file'  # 2>&1 > /dev/null
[[ -z "$commands[trash]" ]] || alias trash='\trash -l' # lists all items currently in the Trash
